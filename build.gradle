plugins {
  id "com.github.ben-manes.versions" version "0.51.0"
  id 'java-library'
  id 'application'
  id 'maven-publish'
  id 'signing'
  id "org.gradle.test-retry" version "1.5.10"
  id "eclipse"
}

repositories {
    mavenLocal()
    mavenCentral()
    maven { url 'https://oss.sonatype.org/content/repositories/snapshots' }
}

ext.junitJupiterVersion = '5.11.0'
ext.desc = 'Calimero, a free KNX network library'

group = 'com.github.calimero'
version = '2.6-rc1'

java {
    toolchain {
        languageVersion.set(JavaLanguageVersion.of(17))
    }
    withSourcesJar()
    withJavadocJar()
}

tasks.withType(Jar).configureEach {
    from("${projectDir}") {
        include 'LICENSE.txt'
        into "META-INF"
    }
    if (name == 'sourcesJar') {
        from("${projectDir}") {
            include 'README.md'
        }
    }
}

compileJava.options.encoding = 'UTF-8'
compileTestJava.options.encoding = 'UTF-8'
javadoc.options.encoding = 'UTF-8'


compileJava.options*.compilerArgs = [
	'-Xlint:all,-serial',
	"--limit-modules", "java.base,java.xml"
]

compileTestJava.options*.compilerArgs = [
	'-Xlint:all',
	'-Xlint:-try',
]


mainClassName = 'tuwien.auto.calimero.Settings'

sourceSets {
    main {
        java.srcDirs = ['src']
        resources.srcDirs = ['resources']
    }
    test {
        java.srcDirs = ['test']
        java.exclude 'resources/', '**/.gradle'
        resources.srcDirs = ['test/resources']
    }
}

tasks.withType(Javadoc).configureEach {
    options.addStringOption("Xdoclint:-missing", '-quiet')
}

jar {
	manifest {
		attributes 'Main-Class': mainClassName
	}
}

test {
	useJUnitPlatform() {
		excludeTags 'ft12', 'slow'
//		excludeTags 'knxnetip'
		testLogging {
//			exceptionFormat "full"
//			showStandardStreams true
		}
	}
	retry {
		maxRetries = 2
		maxFailures = 20
	}
}

publishing {
    publications {
        mavenJava(MavenPublication) {
            artifactId = rootProject.name
            from components.java
            pom {
                name = 'Calimero core library'
                description = 'Calimero, a free KNX network library'
                url = 'https://github.com/calimero-project/calimero-core'
                inceptionYear = '2006'
                licenses {
                    license {
                        name = "GNU General Public License, version 2, with the Classpath Exception"
                        url = 'LICENSE'
                    }
                }
                developers {
                    developer {
                        name = "Boris Malinowsky"
                        email = "b.malinowsky@gmail.com"
                    }
                }
                scm {
                    connection = 'scm:git:git://github.com/calimero-project/calimero-core.git'
                    url = 'https://github.com/calimero-project/calimero-core.git'
                }
            }
        }
    }
    repositories {
        maven {
            name 'maven'
            def releasesRepoUrl = "https://oss.sonatype.org/service/local/staging/deploy/maven2/"
            def snapshotsRepoUrl = "https://oss.sonatype.org/content/repositories/snapshots/"
            url = version.endsWith('SNAPSHOT') ? snapshotsRepoUrl : releasesRepoUrl
            credentials(PasswordCredentials)
        }
    }
}

signing {
    if (project.hasProperty("signing.keyId")) {
        sign publishing.publications.mavenJava
    }
}

plugins.withType(JavaPlugin).configureEach {
    eclipse {
        jdt {
            file.withProperties { properties ->
                // Eclipse's view of projects treats circular dependencies as errors by default
                properties["org.eclipse.jdt.core.circularClasspath"] = "warning"
            }
        }
    }
}

dependencies {
    api 'org.slf4j:slf4j-api:2.0.12'

	testImplementation "org.junit.jupiter:junit-jupiter:${junitJupiterVersion}"
	// Eclipse treats circular dependencies as errors by default, see eclipseJdt task above
//	testRuntimeOnly "com.github.calimero:calimero-rxtx:${version}"
}
